version: "3"

services:
  opensearch-node1:
    image: opensearchproject/opensearch:1.3.0
    container_name: opensearch-node1
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node1
      - bootstrap.memory_lock=true # along with the memlock settings below, disables swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
      - "DISABLE_INSTALL_DEMO_CONFIG=true" # disables execution of install_demo_configuration.sh bundled with security plugin, which installs demo certificates and security configurations to OpenSearch
      - "DISABLE_SECURITY_PLUGIN=true" # disables security plugin entirely in OpenSearch by setting plugins.security.disabled: true in opensearch.yml
      - "discovery.type=single-node" # disables bootstrap checks that are enabled when network.host is set to a non-loopback address
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 # maximum number of open files for the OpenSearch user, set to at least 65536 on modern systems
        hard: 65536
    volumes:
      - opensearch-data1:/usr/share/opensearch/data
    ports:
      - 9200:9200
      - 9600:9600 # required for Performance Analyzer
    healthcheck:
      test: curl -s http://opensearch-node1:9200 >/dev/null || exit 1
      interval: 1s
      timeout: 10s
      retries: 50
  nginx:
    container_name: oais_nginx
    build:
      context: nginx/
    ports:
      - 80:80
    volumes:
      - ./oais-web:/oais_web
    depends_on:
      - django
  db:
    container_name: oais_psql
    image: postgres:12-alpine
    environment:
      - POSTGRES_DB=oais_platform
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=overwritethisinprod!
      - PGDATA=/data/postgres
    volumes:
      - postgres:/data/postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 10s
      retries: 50

  pgadmin:
    container_name: oais_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped

  # Django app
  django:
    container_name: oais_django
    # Current path contains the Dockerfile for the Django app
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - .:/oais_platform
    command:
      # Wait for the database to be online
      # Run Django migrations (create tables on the db from the models)
      # Create OpenAPI specification with `rdf-spectacular` and output it in schema.yml
      # Bring up the web server on port 8000
      >
      sh -c "python3 manage.py makemigrations &&
             python3 manage.py migrate &&
             python3 manage.py test"
    environment:
      # Point to the postgres service
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASS=overwritethisinprod!
      - DB_NAME=oais_platform
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - OPENSEARCH_HOST=http://opensearch-node1:9200
      - INVENIO_API_TOKEN=<YOUR_INVENIO_API_TOKEN_HERE>
      - INVENIO_SERVER_URL=<YOUR_INVENIO_SERVER_URL_HERE>
    depends_on:
      db:
        condition: service_healthy
      opensearch-node1:
        condition: service_healthy
    env_file:
      - ./.env.dev

  # Redis
  redis:
    container_name: oais_redis
    image: redis:alpine

  celery:
    container_name: oais_celery
    restart: always
    build:
      context: .
    command: celery -A oais_platform.celery worker -l INFO
    volumes:
      - .:/oais_platform
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis
      - django
    environment:
      # Point to the redis service
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL=postgres://postgres:postgres@db:5433/web_dev
      - DB_HOST=db
      - DB_NAME=oais_platform
      - DB_USER=postgres
      - DB_PASS=overwritethisinprod!
      - INVENIO_API_TOKEN=<YOUR_INVENIO_API_TOKEN_HERE>
      - INVENIO_SERVER_URL=<YOUR_INVENIO_SERVER_URL_HERE>

volumes:
  postgres:
  pgadmin:
  opensearch-data1:
